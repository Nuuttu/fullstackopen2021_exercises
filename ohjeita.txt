



npm backend: 
npm init
"scripts:" {
	"start": "node index.js",
npm install express
npm install --save-dev nodemon
"scripts": {
	"dev": "nodemon index.js",
"devdDpendencies": {
	"dev": "nodemon index.js",

npm run dev

npm install cors




to heroku:

https://devcenter.heroku.com/articles/git

heroku create
heroku git:remote -a thawing-inlet-61413

git remote -v

git init
git add .
git commit -am "mmmm"
git push heroku master

"engines": {
	"node": "14.x"
},




VAROITUS create-react-app tekee projektista automaattisesti Git-repositorion, 
ellei sovellusta luoda jo olemassa olevan repositorion sisälle. 
Todennäköisesti et halua, että projektista tulee repositorio, 
joten suorita projektin juuressa komento 

rm -rf .git



Vinkki: Kun olet avaamassa tehtävääsi Visual Studio Codella, 
huomaathan avata koko projektin kansion editoriin. 
Tämä mahdollistaa editorissa helpomman tiedostojen välillä siirtymisen ja 
paremmat automaattiset täydennykset. Tämä onnistuu siirtymällä terminaalissa 
projektin kansioon ja komentamalla:

$ code .


npm install axios
npm install json-server --save-dev

npx json-server --port=3001 --watch db.json

npm run server

Oletusarvoisesti json-server käynnistyy porttiin 3000, 
mutta create-react-app:illa luodut projektit varaavat portin 3000, 
joten joudumme nyt määrittelemään json-serverille vaihtoehtoisen portin 3001.

npm install json-server --save-dev

ja tehdään tiedoston package.json osaan scripts pieni lisäys

{
  // ... 
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "server": "json-server -p3001 --watch db.json"
  },
}






npm update

Vastaavasti jos aloitamme projektin koodaamisen toisella koneella, 
saamme haettua ajantasaiset, package.json:in määrittelyn kanssa yhteensopivat 
riippuvuudet komennolla

npm install

Jos riippuvuuden major-versionumero ei muutu, uudempien versioiden pitäisi 
olla taaksepäin yhteensopivia, eli jos ohjelmamme käyttäisi tulevaisuudessa 
esim. expressin versiota 4.99.175, tässä osassa tehtävän koodin pitäisi 
edelleen toimia ilman muutoksia. Sen sijaan tulevaisuudessa joskus julkaistava 
express 5.0.0. voi sisältää sellaisia muutoksia, että koodimme ei enää toimisi.