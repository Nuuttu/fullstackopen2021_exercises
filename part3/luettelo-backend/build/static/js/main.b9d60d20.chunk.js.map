{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","services/PersonServices.js","App.js","index.js"],"names":["PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Persons","pts","persons","filter","p","name","toLowerCase","includes","newFilter","map","i","number","onClick","deletePerson","id","Filter","handleFilterChange","baseUrl","serv","getAll","axios","get","then","response","data","create","newPerson","post","update","put","deleteService","delete","Notification","errorMessage","successMessage","className","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setErrorMessage","setSuccessMessage","personFetch","personService","catch","error","console","log","setTimeout","useEffect","e","target","preventDefault","alreadyExists","personObject","length","window","confirm","pid","find","person","returnedPerson","concat","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9d60d20.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return(\r\n    <form onSubmit={props.addPerson}>\r\n          <div>\r\n            name: \r\n            <input \r\n              value={props.newName} \r\n              onChange={props.handleNameChange}\r\n              />\r\n          </div>\r\n          <div>\r\n            number: \r\n            <input \r\n              value={props.newNumber} \r\n              onChange={props.handleNumberChange}\r\n              />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">add</button>\r\n          </div>\r\n        </form>\r\n    )\r\n  }\r\n\r\n  export default PersonForm","import React from 'react'\r\n\r\nconst Persons = (props) => {\r\n    let pts = props.persons.filter(p => p.name.toLowerCase().includes(props.newFilter.toLowerCase()));\r\n    return(\r\n      <div>\r\n        {pts.map((p, i) => <p key={i}>{p.name} {p.number} <button onClick={() => props.deletePerson(p.id)}>delete</button></p>)}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n      <div>\r\n        filter shown with:\r\n          <input \r\n            value={props.newFilter}\r\n            onChange={props.handleFilterChange}\r\n            />\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n  const request = axios.post(baseUrl, newPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteService = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst serv = { getAll, create, update, deleteService }\r\n\r\nexport default serv;","import React, { useState, useEffect  } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport personService from './services/PersonServices'\n\nconst Notification = (props) => {\n  if (props.errorMessage === null && props.successMessage === null) {\n    return null\n  }\n  if (props.errorMessage != null)\n    return (\n    <div className=\"error\">\n      {props.errorMessage}\n    </div>\n    )\n  return (\n    <div className=\"success\">\n      {props.successMessage}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([\n    { name: 'Arto Hellas', number: '040-123456' },\n    { name: 'Ada Noconnection', number: '39-44-5323523' },\n    /* test */\n  ]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  const [ successMessage, setSuccessMessage ] = useState(null)\n\n  \n  const personFetch = () => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n      .catch(error => {\n        console.log('fail', error);\n        setErrorMessage(\n          `couldn't get data from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000);\n      })\n  }\n  useEffect(personFetch, [])\n\n  const addPerson = (e) => {\n    e.preventDefault();\n    var alreadyExists = false;\n    const personObject = { name: newName, number: newNumber }\n    for (let i = 0; i < persons.length; i++) {\n      if (persons[i].name === newName /* || persons[i].number === newNumber */) { \n        /* alert(newName + ' is already added to phonebook'); */\n        if (window.confirm(`${newName} already exists. Replace old with new?`)) {\n          const pid = persons.find(person => person.name === newName).id\n          personService\n            .update(pid, personObject)\n            .then(response => {\n              personFetch();\n              setSuccessMessage('updated person successfully')\n              setTimeout(() => {\n              setSuccessMessage(null) \n                }, 2000)\n              })\n            .catch(error => {\n              console.log('fail', error);\n              setErrorMessage(\n                `updating ${newName} person failed`\n              )\n              setTimeout(() => {\n                setErrorMessage(null)\n              }, 5000)\n              })\n        }\n        alreadyExists = true;\n        break;\n      }\n      if (/* persons[i].name === newName || */ persons[i].number === newNumber ) { /* separated for ease */\n        /* alert(newName + ' is already added to phonebook'); */\n        if (window.confirm(`${newName} already exists. Replace old with new?`)) {\n          const pid = persons.find(person => person.number === newNumber).id\n          personService\n            .update(pid, personObject)\n            .then(response => {\n              personFetch();\n              setSuccessMessage('updated person successfully')\n              setTimeout(() => {\n              setSuccessMessage(null) \n                }, 2000)\n            })\n            .catch(error => {\n              console.log('fail', error);\n              setErrorMessage(\n                `updating ${newName} person failed`\n              )\n              setTimeout(() => {\n                setErrorMessage(null)\n              }, 5000)\n              })\n        }\n        alreadyExists = true;\n        break;\n      }\n    }\n    if (!alreadyExists) {\n      personService\n        .create(personObject)\n        .then(returnedPerson => { /* This is the way */ \n          setPersons(persons.concat(returnedPerson));\n          setSuccessMessage('added person successfully')\n          setTimeout(() => {\n            setSuccessMessage(null) \n            }, 2000)\n        })\n        .catch(error => {\n          console.log('fail', error);\n          setErrorMessage('error happened: ' + error.response.data.error)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n    }\n    setNewNumber('');\n    setNewName('');\n  }\n\n  const deletePerson = (id) => {\n    const personToDelete = persons.find(person => person.id === id).name\n    if (window.confirm('Wanna delete ' + personToDelete + '?' )) {\n      personService\n        .deleteService(id)\n        .then(response => { \n          personFetch()\n          setSuccessMessage(`deleted ${personToDelete} person successfully`)\n          setTimeout(() => {\n            setSuccessMessage(null) \n            }, 2000)\n        }) /* this is the way, almost... */\n        .catch(error => {\n          console.log('fail', error);\n          setErrorMessage(\n            `No ${personToDelete} found on the server`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value)\n  }\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value)\n  }\n  const handleFilterChange = (e) => {\n    setNewFilter(e.target.value)\n  }\n\n  \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification successMessage={successMessage} errorMessage={errorMessage} />\n      <Filter \n        newFilter={newFilter} \n        handleFilterChange={handleFilterChange}/>\n      <h1>add a new</h1>\n      <PersonForm \n        addPerson={addPerson} \n        newName={newName} \n        newNumber={newNumber} \n        handleNameChange={handleNameChange} \n        handleNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2>\n      <Persons \n        persons={persons} \n        newFilter={newFilter}\n        deletePerson={deletePerson}/>\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}