{"ast":null,"code":"var _jsxFileName = \"F:\\\\react_dev\\\\fullstackopen2021\\\\part8\\\\library-frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ALL_AUTHORS = gql`\n  query {\n    allAuthors  {\n      name\n      born\n      books\n      id\n    }\n  }\n`;\n\nconst App = () => {\n  _s();\n\n  const [page, setPage] = useState('authors');\n  const result = useQuery(ALL_AUTHORS);\n\n  if (result.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  console.log('resluts', result.data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('authors'),\n        children: \"authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('books'),\n        children: \"books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('add'),\n        children: \"add book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Authors, {\n      authors: result.data.allAuthors,\n      show: page === 'authors'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Books, {\n      show: page === 'books'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewBook, {\n      show: page === 'add'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"IV40q1EKpKEeFeQ+vmbO+PX6jNc=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/react_dev/fullstackopen2021/part8/library-frontend/src/App.js"],"names":["React","useState","Authors","Books","NewBook","gql","useQuery","ALL_AUTHORS","App","page","setPage","result","loading","console","log","data","allAuthors"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;;AAEA,MAAMC,WAAW,GAAGF,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;;AAWA,MAAMG,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,SAAD,CAAhC;AAEA,QAAMU,MAAM,GAAGL,QAAQ,CAACC,WAAD,CAAvB;;AAEA,MAAII,MAAM,CAACC,OAAX,EAAqB;AACnB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAM,CAACI,IAA9B;AAEA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAML,OAAO,CAAC,SAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,OAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,OAAD;AACE,MAAA,OAAO,EAAEC,MAAM,CAACI,IAAP,CAAYC,UADvB;AAEE,MAAA,IAAI,EAAEP,IAAI,KAAK;AAFjB;AAAA;AAAA;AAAA;AAAA,YAPF,eAYE,QAAC,KAAD;AACE,MAAA,IAAI,EAAEA,IAAI,KAAK;AADjB;AAAA;AAAA;AAAA;AAAA,YAZF,eAgBE,QAAC,OAAD;AACE,MAAA,IAAI,EAAEA,IAAI,KAAK;AADjB;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAlCD;;GAAMD,G;UAGWF,Q;;;KAHXE,G;AAoCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport Authors from './components/Authors'\r\nimport Books from './components/Books'\r\nimport NewBook from './components/NewBook'\r\n\r\nimport { gql, useQuery } from '@apollo/client'\r\n\r\nconst ALL_AUTHORS = gql`\r\n  query {\r\n    allAuthors  {\r\n      name\r\n      born\r\n      books\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst App = () => {\r\n  const [page, setPage] = useState('authors')\r\n\r\n  const result = useQuery(ALL_AUTHORS)\r\n\r\n  if (result.loading)  {\r\n    return <div>loading...</div>\r\n  }\r\n\r\n  console.log('resluts', result.data)\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button onClick={() => setPage('authors')}>authors</button>\r\n        <button onClick={() => setPage('books')}>books</button>\r\n        <button onClick={() => setPage('add')}>add book</button>\r\n      </div>\r\n\r\n      <Authors\r\n        authors={result.data.allAuthors}\r\n        show={page === 'authors'}\r\n      />\r\n\r\n      <Books\r\n        show={page === 'books'}\r\n      />\r\n\r\n      <NewBook\r\n        show={page === 'add'}\r\n      />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}