{"ast":null,"code":"var _jsxFileName = \"F:\\\\react_dev\\\\fullstackopen2021\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Buttons = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        console.log('moi1');\n        {\n          props.setGood(props.good + 1);\n        }\n      },\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        console.log('moi');\n        {\n          props.setNeutral(props.neutral + 1);\n        }\n      },\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        console.log('moi');\n        {\n          props.setBad(props.bad + 1);\n        }\n      },\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Buttons;\n\nconst Statistics = props => {\n  const all = props.good + props.neutral + props.bad;\n  const avg = (props.good * 1 + props.neutral * 0 + props.bad * -1) / (props.good + props.neutral + props.bad);\n  const positive = props.good / (props.good + props.neutral + props.bad) * 100;\n\n  if (props.good + props.bad + props.neutral == 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StatisticsLine, {\n      text: \"good\",\n      value: props.good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      text: \"neutral\",\n      value: props.neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      text: \"bad\",\n      value: props.bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      text: \"all\",\n      value: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      text: \"average\",\n      value: avg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      text: \"positive\",\n      value: positive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst StatisticsLine = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [props.text, \" \", props.value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = StatisticsLine;\n\nconst App = () => {\n  _s();\n\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      good: good,\n      setGood: setGood,\n      neutral: neutral,\n      setNeutral: setNeutral,\n      bad: bad,\n      setBad: setBad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Buttons\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"StatisticsLine\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["F:/react_dev/fullstackopen2021/part1/unicafe/src/App.js"],"names":["React","useState","Buttons","props","console","log","setGood","good","setNeutral","neutral","setBad","bad","Statistics","all","avg","positive","StatisticsLine","text","value","App"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEzB,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA;AAACF,UAAAA,KAAK,CAACG,OAAN,CAAcH,KAAK,CAACI,IAAN,GAAa,CAA3B;AAA8B;AAChC,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrBH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA;AAACF,UAAAA,KAAK,CAACK,UAAN,CAAiBL,KAAK,CAACM,OAAN,GAAgB,CAAjC;AAAoC;AACpC,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eASE;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrBL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA;AAACF,UAAAA,KAAK,CAACO,MAAN,CAAaP,KAAK,CAACQ,GAAN,GAAY,CAAzB;AAA4B;AAC5B,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAlBD;;KAAMT,O;;AAoBN,MAAMU,UAAU,GAAIT,KAAD,IAAW;AAC5B,QAAMU,GAAG,GAAKV,KAAK,CAACI,IAAN,GAAaJ,KAAK,CAACM,OAAnB,GAA6BN,KAAK,CAACQ,GAAjD;AACA,QAAMG,GAAG,GAAG,CAAEX,KAAK,CAACI,IAAN,GAAa,CAAb,GAAiBJ,KAAK,CAACM,OAAN,GAAgB,CAAjC,GAAqCN,KAAK,CAACQ,GAAN,GAAY,CAAC,CAApD,KAA4DR,KAAK,CAACI,IAAN,GAAaJ,KAAK,CAACM,OAAnB,GAA6BN,KAAK,CAACQ,GAA/F,CAAZ;AACA,QAAMI,QAAQ,GAAKZ,KAAK,CAACI,IAAN,IAAeJ,KAAK,CAACI,IAAN,GAAaJ,KAAK,CAACM,OAAnB,GAA6BN,KAAK,CAACQ,GAAlD,CAAF,GAA8D,GAA/E;;AACA,MAAIR,KAAK,CAACI,IAAN,GAAaJ,KAAK,CAACQ,GAAnB,GAAyBR,KAAK,CAACM,OAA/B,IAA0C,CAA9C,EAAiD;AAC/C,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AACD,sBACE;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,MAArB;AAA4B,MAAA,KAAK,EAAEN,KAAK,CAACI;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,SAArB;AAA+B,MAAA,KAAK,EAAEJ,KAAK,CAACM;AAA5C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,KAArB;AAA2B,MAAA,KAAK,EAAEN,KAAK,CAACQ;AAAxC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,KAArB;AAA2B,MAAA,KAAK,EAAEE;AAAlC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,SAArB;AAA+B,MAAA,KAAK,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,UAArB;AAAgC,MAAA,KAAK,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnBD;;MAAMH,U;;AAqBN,MAAMI,cAAc,GAAIb,KAAD,IAAW;AAEhC,sBACE;AAAA,eAAIA,KAAK,CAACc,IAAV,OAAiBd,KAAK,CAACe,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CALD;;MAAMF,c;;AAON,MAAMG,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACZ,IAAD,EAAOD,OAAP,IAAkBL,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUD,UAAV,IAAwBP,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACU,GAAD,EAAMD,MAAN,IAAgBT,QAAQ,CAAC,CAAD,CAA9B;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEM,IAAf;AAAqB,MAAA,OAAO,EAAED,OAA9B;AAAuC,MAAA,OAAO,EAAEG,OAAhD;AAAyD,MAAA,UAAU,EAAED,UAArE;AAAiF,MAAA,GAAG,EAAEG,GAAtF;AAA2F,MAAA,MAAM,EAAED;AAAnG;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEH,IAAlB;AAAwB,MAAA,OAAO,EAAEE,OAAjC;AAA0C,MAAA,GAAG,EAAEE;AAA/C;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAdD;;GAAMQ,G;;MAAAA,G;AAgBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst Buttons = (props) => {\n\n  return (\n    <div>\n      <button onClick={() => {\n        console.log('moi1')\n        {props.setGood(props.good + 1)}\n      } }>good</button>\n      <button onClick={() => {\n        console.log('moi')\n        {props.setNeutral(props.neutral + 1)}\n        } }>neutral</button>\n      <button onClick={() => {\n        console.log('moi')\n        {props.setBad(props.bad + 1)}\n        } }>bad</button>\n    </div>\n  )\n}\n\nconst Statistics = (props) => {\n  const all = ( props.good + props.neutral + props.bad )\n  const avg = ( props.good * 1 + props.neutral * 0 + props.bad * -1 ) / ( props.good + props.neutral + props.bad )\n  const positive = ( props.good / ( props.good + props.neutral + props.bad ) ) * 100\n  if (props.good + props.bad + props.neutral == 0) {\n    return (\n      <p>No feedback given</p>\n    )\n  }\n  return (\n    <div>\n      <StatisticsLine text=\"good\" value={props.good} />\n      <StatisticsLine text=\"neutral\" value={props.neutral} />\n      <StatisticsLine text=\"bad\" value={props.bad} />\n      <StatisticsLine text=\"all\" value={all} />\n      <StatisticsLine text=\"average\" value={avg} />\n      <StatisticsLine text=\"positive\" value={positive} />\n    </div>\n  )\n}\n\nconst StatisticsLine = (props) => {\n  \n  return(\n    <p>{props.text} {props.value}</p>\n  )\n}\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Buttons good={good} setGood={setGood} neutral={neutral} setNeutral={setNeutral} bad={bad} setBad={setBad}/>\n      <h1>statistics</h1>\n      <Statistics good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}