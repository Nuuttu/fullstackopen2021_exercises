{"ast":null,"code":"var _jsxFileName = \"F:\\\\react_dev\\\\fullstackopen2021\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Buttons = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        {\n          props.setGood(props.good + 1);\n        }\n      },\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        {\n          props.setNeutral(props.neutral + 1);\n        }\n      },\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        {\n          props.setBad(props.bad + 1);\n        }\n      },\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Buttons;\n\nconst Statistics = props => {\n  const all = props.good + props.neutral + props.bad;\n  const avg = (props.good * 1 + props.neutral * 0 + props.bad * -1) / (props.good + props.neutral + props.bad);\n  const positive = props.good / (props.good + props.neutral + props.bad) * 100;\n\n  if (props.good + props.bad + props.neutral === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(StatisticsLine, {\n          text: \"good\",\n          value: props.good\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n          text: \"neutral\",\n          value: props.neutral\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n          text: \"bad\",\n          value: props.bad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n          text: \"all\",\n          value: all\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n          text: \"average\",\n          value: avg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n          text: \"positive\",\n          value: positive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst StatisticsLine = props => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = StatisticsLine;\n\nconst App = () => {\n  _s();\n\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      good: good,\n      setGood: setGood,\n      neutral: neutral,\n      setNeutral: setNeutral,\n      bad: bad,\n      setBad: setBad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nx;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Buttons\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"StatisticsLine\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["F:/react_dev/fullstackopen2021/part1/unicafe/src/App.js"],"names":["React","useState","Buttons","props","setGood","good","setNeutral","neutral","setBad","bad","Statistics","all","avg","positive","StatisticsLine","text","value","App","x"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst Buttons = (props) => {\n\n  return (\n    <div>\n      <button onClick={() => {{props.setGood(props.good + 1)}} }>good</button>\n      <button onClick={() => {{props.setNeutral(props.neutral + 1)}} }>neutral</button>\n      <button onClick={() => {{props.setBad(props.bad + 1)}} }>bad</button>\n    </div>\n  )\n}\n\nconst Statistics = (props) => {\n  const all = ( props.good + props.neutral + props.bad )\n  const avg = ( props.good * 1 + props.neutral * 0 + props.bad * -1 ) / ( props.good + props.neutral + props.bad )\n  const positive = ( props.good / ( props.good + props.neutral + props.bad ) ) * 100\n  if (props.good + props.bad + props.neutral === 0) {\n    return (\n      <p>No feedback given</p>\n    )\n  }\n  return (\n    <div>\n      <table>\n        <tbody>\n        <StatisticsLine text=\"good\" value={props.good} />\n        <StatisticsLine text=\"neutral\" value={props.neutral} />\n        <StatisticsLine text=\"bad\" value={props.bad} />\n        <StatisticsLine text=\"all\" value={all} />\n        <StatisticsLine text=\"average\" value={avg} />\n        <StatisticsLine text=\"positive\" value={positive} />\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nconst StatisticsLine = (props) => {\n  \n  return(\n    <tr><td>{props.text}</td><td>{props.value}</td></tr>\n  )\n}\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Buttons good={good} setGood={setGood} neutral={neutral} setNeutral={setNeutral} bad={bad} setBad={setBad}/>\n      <h1>statistics</h1>\n      <Statistics good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\nx\nexport default App"]},"metadata":{},"sourceType":"module"}